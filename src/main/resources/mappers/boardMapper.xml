<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boardMapper">

	<!-- 게시판 글 작성 -->
	<insert id="insert">
		INSERT INTO employees (	
				employee_id,
				name,
				email,
				phone_number,
				hire_date,
				leave_date,
				department_id,
				address,
				reg_no,
				bank_id,
				bank_account
			) VALUES (
				employees_seq.nextval,
				#{name},
				#{email},
				#{phone_number},
				#{hire_date},
				#{leave_date},
				#{department_id},
				#{address},
				#{reg_no},
				#{bank_id},
				#{bank_account}
			)
	</insert>
	
	<resultMap id="boardVoResultMap" type="kr.co.vo.BoardVO">
		<id property="employee_id" column="employee_id"/>
		<result property="name" column="name"/>
		<result property="email" column="email"/>
		<result property="phone_number" column="phone_number"/>
		<result property="hire_date" column="hire_date"/>
		<result property="leave_date" column="leave_date"/>
		<result property="department_id" column="department_id"/>
		<result property="address" column="address"/>
		<result property="reg_no" column="reg_no"/>
		<result property="bank_id" column="bank_id"/>
		<result property="bank_account" column="bank_account"/>	
		<association property="departments" resultMap="deptResultMap"/>
	</resultMap>
	
	<resultMap id="deptResultMap" type="kr.co.vo.Departments">
		<id property="department_id" column="department_id"/>
		<result property="department_name" column="department_name"/>
	</resultMap>
	
	<!-- 직원 목록 -->
	<select id="listPage" resultType="kr.co.vo.BoardVO" resultMap="boardVoResultMap" parameterType="kr.co.vo.Criteria">
		SELECT      employee_id,
            		name,
            		email,
            		phone_number,
            		hire_date,
            		leave_date,
            		department_id,
            		address,
            		reg_no,
            		bank_id,
            		bank_account,
            		department_name
		FROM (
        		SELECT e.*, d.department_name,
        		ROW_NUMBER() OVER(ORDER BY e.employee_id DESC) as RNUM
        		FROM employees e
        		LEFT JOIN departments d 
        		ON e.department_id = d.department_id
     		  ) emp
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY employee_id DESC;
	</select>
	
	<!-- 직원 총 인원수 -->
	<select id="listCount" resultType="int">
	<![CDATA[
			SELECT COUNT(employee_id)
			FROM   employees
			WHERE  employee_id > 0
	]]>
	</select>
	
	<!-- 직원 정보 조회 -->
	<select id="read" parameterType="int" resultType="kr.co.vo.BoardVO" resultMap="boardVoResultMap">
		SELECT *
		FROM  employees
		WHERE employee_id = #{employee_id}
	</select>
	
	<!-- 직원 정보 수정 -->
	<update id="update" parameterType="kr.co.vo.BoardVO">
		UPDATE	employees
		   SET	name = #{name},
		   		email = #{email},
		   		phone_number = #{phone_number},
		   		hire_date = #{hire_date},
		   		leave_date = #{leave_date},
		   		department_id = #{department_id},
		   		address = #{address},
		   		reg_no = #{reg_no},
		   		bank_id = #{bank_id},
		   		bank_account = #{bank_account}  
		WHERE 	employee_id = #{employee_id}
	</update>
	
	<!-- 직원 정보 선택삭제 -->
	<delete id="delete" parameterType="java.util.List">
		DELETE  FROM  employees
		<where>
			employee_id IN
			<foreach collection="list" item="id" separator="," open="(" close=")">
				#{id}
			</foreach>
		</where>
	</delete>
</mapper>